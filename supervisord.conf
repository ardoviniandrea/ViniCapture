[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
user=root

[program:vncserver]
# NEW: This program starts the TigerVNC server.
# It runs as the 'kasm' user to ensure correct permissions and desktop session.
# The '-fg' flag keeps it in the foreground for supervisor to monitor.
# It also cleans up potential stale lock files from a previous unclean shutdown.
command=bash -c "rm -f /tmp/.X1-lock /tmp/.X11-unix/X1 && /usr/bin/vncserver :1 -geometry 1920x1080 -depth 24 -fg"
user=kasm
environment=HOME="/home/kasm",USER="kasm"
priority=1
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:websockify]
# NEW: This program starts the websockify bridge.
# It listens on port 6901 (for browser connections) and forwards them
# to the TCP port of our VNC server (localhost:5901).
command=/usr/bin/websockify 6901 localhost:5901
priority=2
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
priority=5
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:node_api]
command=bash -c "echo '[node_api_wrapper] Starting Node.js with DISPLAY=$DISPLAY' && /usr/bin/node /usr/src/app/server.js"
directory=/usr/src/app
environment=DISPLAY=":1"
priority=5
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; Add supervisorctl interface
[unix_http_server]
file=/var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

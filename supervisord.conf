[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
user=root

[program:kasmvnc-init]
; --- STEP 1: INITIALIZATION SCRIPT ---
; This program runs the official kasmvncserver script ONCE at startup.
; Its job is to create the necessary user configs and Xauthority files.
; It will start the FIRST Xvnc process and then exit.
; 'autorestart=false' is critical because we don't want supervisor to
; keep re-running this initialization script.
command=bash -c "rm -f /tmp/.X1-lock /tmp/.X11-unix/X1 && echo 2 | /usr/bin/kasmvncserver -run -websocketPort 6901 -sslOnly=0 -DisableBasicAuth -debug"
user=kasm
environment=HOME="/home/kasm",USER="kasm",DISPLAY=":1"
priority=1
autostart=true
autorestart=false
startsecs=5

[program:kasmvnc-run]
; --- STEP 2: THE REAL VNC SERVER ---
; After the init script exits, the original Xvnc it started is killed.
; This program then starts the REAL, long-running Xvnc server process.
; Supervisor will now correctly monitor this process for the lifetime
; of the container. We use the '-fg' (foreground) option to ensure it
; stays attached to supervisor.
command=/usr/bin/Xvnc :1 -fg -websocketPort 6901 -sslOnly=0 -DisableBasicAuth -Log *:stderr:100 -auth /home/kasm/.Xauthority
user=kasm
environment=HOME="/home/kasm",USER="kasm",DISPLAY=":1"
priority=2
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
priority=5
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:node_api]
command=bash -c "echo '[node_api_wrapper] Starting Node.js with DISPLAY=$DISPLAY' && /usr/bin/node /usr/src/app/server.js"
directory=/usr/src/app
environment=DISPLAY=":1"
priority=5
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; Add supervisorctl interface
[unix_http_server]
file=/var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock


[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
user=root ; Added to suppress the CRIT log message

[program:kasmvnc]
; This single service replaces Xvfb, fluxbox, pulseaudio, and x11vnc
; It starts a web-native VNC server on internal port 6901
; --- FIX: Add --no-ssl since Nginx is handling SSL termination ---
command=/usr/bin/kasmvncserver -P 6901 --no-ssl -Log File:/home/kasm/.vnc/kasmvnc.log:Debug
user=kasm
; --- FIX: Add DISPLAY=:1 to ensure kasmvnc binds to the correct display ---
environment=HOME="/home/kasm",USER="kasm",DISPLAY=":1"
priority=1
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
priority=5
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:node_api]
; This Node.js app now handles starting/stopping ffmpeg
; --- DEBUG: Wrap in bash to echo the DISPLAY var on start ---
command=bash -c "echo '[node_api_wrapper] Starting Node.js with DISPLAY=$DISPLAY' && /usr/bin/node /usr/src/app/server.js"
directory=/usr/src/app
; --- FIX ---
; Add DISPLAY=:1 here. This ensures that the Node.js app,
; and the ffmpeg process it spawns, can find the
; X server display created by the kasmvnc program.
environment=DISPLAY=":1"
priority=5
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; --- NEW DEBUG STEP ---
; Add a new program to tail the actual KasmVNC log file.
; This will show us the real error from the VNC server itself.
[program:kasmvnc_log]
command=bash -c "touch /home/kasm/.vnc/kasmvnc.log && tail -f /home/kasm/.vnc/kasmvnc.log"
user=kasm
priority=10
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

; Add supervisorctl interface
[unix_http_server]
file=/var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

